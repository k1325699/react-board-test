{"version":3,"sources":["components/App/App.js","reportWebVitals.js","index.js"],"names":["Page","styled","div","Title","h1","MessageForm","form","MessageTextArea","textarea","SubmitButtob","button","MessageList","MessageContainer","MessageHead","MessageAuthor","MessageTime","MessageBody","ErrorMessage","Loading","Message","author","time","children","App","useState","messages","setMessages","messageApiError","setMessageaAiError","value","setValue","postMessageError","setPostMessageError","isLoadingPostMessage","setIsLoadingPostMessage","fetchMessages","fetch","then","res","json","data","catch","err","message","useEffect","onSubmit","e","preventDefault","method","headers","body","JSON","stringify","nickname","ok","onChange","target","onFocus","rows","toString","length","map","Date","createdAt","toLocaleString","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","theme","colors","primary_300","primary_400","primary_500","document","getElementById"],"mappings":"4NAMMA,EAAOC,IAAOC,IAAV,gEAKJC,EAAQF,IAAOG,GAAV,2CAGLC,EAAcJ,IAAOK,KAAV,iDAIXC,EAAkBN,IAAOO,SAAV,+DAIfC,EAAeR,IAAOS,OAAV,gDAIZC,EAAcV,IAAOC,IAAV,iDAIXU,EAAmBX,IAAOC,IAAV,6IAUhBW,EAAcZ,IAAOC,IAAV,yGAKXY,EAAgBb,IAAOC,IAAV,iFAIba,EAAcd,IAAOC,IAAV,0BAEXc,EAAcf,IAAOC,IAAV,mEAIXe,EAAehB,IAAOC,IAAV,gEAKZgB,EAAUjB,IAAOC,IAAV,+OAcb,SAASiB,EAAT,GAA4C,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,SAC9B,OACE,eAACV,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAD,UAAiBM,IACjB,cAACL,EAAD,UAAeM,OAEjB,cAACL,EAAD,UAAeM,OAmGNC,MA1Ff,WACE,MAA+BC,mBAAS,MAAxC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA6CF,mBAAS,MAAtD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAA0BJ,qBAA1B,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAgDN,qBAAhD,mBAAOO,EAAP,KAAyBC,EAAzB,KACA,EAAwDR,oBAAS,GAAjE,mBAAOS,EAAP,KAA6BC,EAA7B,KAEMC,EAAgB,WACpB,OAAOC,MA9FU,+CA+FdC,MAAK,SAACC,GAAD,OAAOA,EAAIC,UAChBF,MAAK,SAAAG,GACJd,EAAYc,MAEbC,OAAM,SAAAC,GACLd,EAAmBc,EAAIC,aA8C7B,OAHAC,qBAAU,WACRT,MACA,IAEA,eAACnC,EAAD,WACE,cAACG,EAAD,iCACC8B,GAAwB,cAACf,EAAD,yBACzB,eAACb,EAAD,CAAawC,SAtCQ,SAACC,GACxBA,EAAEC,iBACCd,IAGHC,GAAwB,GACxBE,MAAM,8CAA+C,CACrDY,OAAQ,OACRC,QAAS,CACT,eAAgB,oBAEhBC,KAAMC,KAAKC,UAAU,CACrBC,SAAU,OACVH,KAAMrB,MAGTQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJN,GAAwB,GACT,IAAZM,EAAKc,IAIRxB,EAAS,IACTK,KAJEH,EAAoBQ,EAAKG,YAK1BF,OAAM,SAAAC,GACPR,GAAwB,GACxBF,EAAoBU,EAAIC,cAWpB,UACE,cAACpC,EAAD,CACAsB,MAAOA,EACP0B,SAjDuB,SAACT,GAC5BhB,EAASgB,EAAEU,OAAO3B,QAiDd4B,QA9CsB,WAC1BzB,EAAoB,OA8ChB0B,KAAQ,KACR,cAACjD,EAAD,8BAEDsB,GAAoB,cAACd,EAAD,UAAec,IACnCJ,GACC,eAACV,EAAD,mCACwBU,EAAgBgC,cAGzClC,GAAgC,IAApBA,EAASmC,QAAgB,6CACtC,cAACjD,EAAD,UACGc,GAAYA,EAASoC,KAAI,SAAAlB,GAAO,OACjC,cAACxB,EAAD,CAAyBC,OAAQuB,EAAQU,SAAUhC,KAAM,IAAIyC,KAAKnB,EAAQoB,WAAWC,iBAArF,SACGrB,EAAQO,MADGP,EAAQsB,aC/JfC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCQdO,IAASC,OACP,cAAC,IAAD,CAAeC,MATH,CACZC,OAAQ,CACNC,YAAa,UACbC,YAAa,UACbC,YAAa,YAKf,SACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.58c96e52.chunk.js","sourcesContent":["import React, {useState,useEffect} from \"react\"\r\nimport styled from \"styled-components\"\r\nimport PropTypes from 'prop-types'\r\n\r\nconst API_ENDPOINT = 'https://student-json-api.lidemy.me/comments'\r\n\r\nconst Page = styled.div`\r\n  width: 300px;\r\n  margin: 0 auto;\r\n`\r\n\r\nconst Title = styled.h1`\r\n  color:#333;\r\n`\r\nconst MessageForm = styled.form`\r\n  margin-top: 16px;\r\n`\r\n\r\nconst MessageTextArea = styled.textarea`\r\n  display: block;\r\n  width: 100%;\r\n`\r\nconst SubmitButtob = styled.button`\r\n  margin-top: 8px;\r\n`\r\n\r\nconst MessageList = styled.div`\r\n  margin-top: 16px;\r\n`\r\n\r\nconst MessageContainer = styled.div`\r\n  border: 1px solid black;\r\n  padding: 8px 16px;\r\n  border-radius: 8px;\r\n\r\n  & + & {\r\n    margin-top: 8px;\r\n  }\r\n`\r\n\r\nconst MessageHead = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`\r\nconst MessageAuthor = styled.div`\r\n  color: rgba(23, 78, 55, 0.3);\r\n  font-size: 14px;\r\n`\r\nconst MessageTime = styled.div``\r\n\r\nconst MessageBody = styled.div`\r\nmargin-top: 16px;\r\n  font-size: 16px;\r\n`\r\nconst ErrorMessage = styled.div`\r\n  margin-top: 16px;\r\n  color: red;\r\n`\r\n\r\nconst Loading = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  color:white;\r\n  font-size: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nfunction Message({author, time, children}) {\r\n  return (\r\n    <MessageContainer>\r\n      <MessageHead>\r\n        <MessageAuthor>{ author }</MessageAuthor>\r\n        <MessageTime>{ time }</MessageTime>\r\n      </MessageHead>\r\n      <MessageBody>{ children }</MessageBody>\r\n    </MessageContainer>\r\n  )\r\n}\r\nMessage.propTypes = {\r\n  auther: PropTypes.string,\r\n  time:PropTypes.string,\r\n  children:PropTypes.node\r\n}\r\nfunction App() {\r\n  const [messages,setMessages] = useState(null)\r\n  const [messageApiError,setMessageaAiError] = useState(null)\r\n  const [value, setValue] = useState()\r\n  const [postMessageError, setPostMessageError] = useState()\r\n  const [isLoadingPostMessage, setIsLoadingPostMessage] = useState(false)\r\n\r\n  const fetchMessages = () => {\r\n    return fetch(API_ENDPOINT)\r\n      .then((res)=>res.json())\r\n      .then(data =>{\r\n        setMessages(data)\r\n      })\r\n      .catch(err =>{\r\n        setMessageaAiError(err.message)\r\n      })\r\n  }\r\n\r\n  const handleTextareaChange = (e) => {\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  const handleTextareaFocus = () => {\r\n    setPostMessageError(null)\r\n  }\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault()\r\n    if(isLoadingPostMessage) {\r\n      return\r\n    }\r\n    setIsLoadingPostMessage(true)\r\n    fetch('https://student-json-api.lidemy.me/comments', {\r\n    method: 'POST',\r\n    headers: {\r\n    'content-type': 'application/json'\r\n  },\r\n    body: JSON.stringify({\r\n    nickname: 'aaaa',\r\n    body: value\r\n    })\r\n  })\r\n.then(res => res.json())\r\n.then(data => {\r\n  setIsLoadingPostMessage(false)\r\n  if(data.ok === 0) {\r\n    setPostMessageError(data.message)\r\n    return\r\n  }\r\n  setValue(\"\")\r\n  fetchMessages()\r\n}).catch(err=>{\r\n  setIsLoadingPostMessage(false)\r\n  setPostMessageError(err.message)\r\n})\r\n  }\r\n\r\n  useEffect(()=>{\r\n    fetchMessages()\r\n  },[])\r\n  return (\r\n    <Page>\r\n      <Title>留言板</Title>\r\n      {isLoadingPostMessage && <Loading>Loading...</Loading>}\r\n      <MessageForm onSubmit={handleFormSubmit}>\r\n        <MessageTextArea \r\n        value={value} \r\n        onChange={handleTextareaChange}\r\n        onFocus={handleTextareaFocus}\r\n        rows = {10}/>\r\n        <SubmitButtob>送出</SubmitButtob>\r\n      </MessageForm>\r\n      {postMessageError && <ErrorMessage>{postMessageError}</ErrorMessage>}\r\n      {messageApiError && (\r\n        <ErrorMessage>\r\n          something went wrong.{messageApiError.toString()}\r\n        </ErrorMessage>\r\n      )}\r\n      {messages && messages.length === 0 && <div>No Message</div>}\r\n      <MessageList>\r\n        {messages && messages.map(message =>(\r\n        <Message key={message.id}author={message.nickname} time={new Date(message.createdAt).toLocaleString()}>\r\n          {message.body}\r\n        </Message>\r\n        ))}\r\n      </MessageList>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from 'styled-components'\n\nconst theme = {\n  colors: {\n    primary_300: '#ff7979',\n    primary_400: '#3333dd',\n    primary_500: '#af0505'\n  }\n}\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App/>\n  </ThemeProvider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}